<div class="pagination">
    <button @onclick="() => OnPageClick(Current - 1)" disabled="@(Current == 1)">이전</button>
    @foreach (var page in GetPageCount())
    {
        <button
            class="@(page == Current ? "active" : "")"
            @onclick="() => OnPageClick(page)"
            disabled="@(page == Current)">
            @(page)
        </button>
    }
    <button @onclick="() => OnPageClick(Current + 1)" disabled="@(Current == Total)">다음</button>
</div>

@code {
    [Parameter] public int Current { get; set; }
    [Parameter] public int Total { get; set; }
    [Parameter] public EventCallback<int> OnChanged { get; set; }
    const int Max = 5;

    protected override async Task OnInitializedAsync()
    {
        await OnChanged.InvokeAsync(Current);
    }

    private async Task OnPageClick(int page)
    {
        if(page < 1)
        {
            return;
        }
        if(page > Total)
        {
            return;
        }
        await OnChanged.InvokeAsync(page);
    }

    private IEnumerable<int> GetPageCount()
    {
        var start = Math.Max(1, Current - 2);
        var end = Math.Min(Total, start + Max - 1);
        start = Math.Max(1, end - Max + 1);
        for (var index = start; index <= end; index++)
        {
            yield return index;
        }
    }
}
