// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Room
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RoomEnter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static RoomEnter GetRootAsRoomEnter(ByteBuffer _bb) { return GetRootAsRoomEnter(_bb, new RoomEnter()); }
  public static RoomEnter GetRootAsRoomEnter(ByteBuffer _bb, RoomEnter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyRoomEnter(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, RoomEnterVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RoomEnter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RoomId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoomIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRoomIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRoomIdArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Room.RoomEnter> CreateRoomEnter(FlatBufferBuilder builder,
      StringOffset room_idOffset = default(StringOffset)) {
    builder.StartTable(1);
    RoomEnter.AddRoomId(builder, room_idOffset);
    return RoomEnter.EndRoomEnter(builder);
  }

  public static void StartRoomEnter(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddRoomId(FlatBufferBuilder builder, StringOffset roomIdOffset) { builder.AddOffset(0, roomIdOffset.Value, 0); }
  public static Offset<Room.RoomEnter> EndRoomEnter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Room.RoomEnter>(o);
  }
  public static void FinishRoomEnterBuffer(FlatBufferBuilder builder, Offset<Room.RoomEnter> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRoomEnterBuffer(FlatBufferBuilder builder, Offset<Room.RoomEnter> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class RoomEnterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*RoomId*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
